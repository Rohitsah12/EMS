
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Employee {
  id          String @id @default(cuid())

  employeeId  String @unique

  name        String
  dateOfBirth DateTime
  maritalStatus MaritalStatus
  joinDate    DateTime @default(now())
  designation    String   
  isActive    Boolean  @default(true)

  email         String    @unique 
  passwordHash  String
  role          UserRole   @default(EMPLOYEE)

  personalEmail String? @unique
  phone         String? @unique
  address       String?

  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String

  managedDepartment Department? @relation("ManagedDepartment")

  leaves        Leave[] @relation("RequestedBy")
  approvedLeaves Leave[] @relation("ApprovedBy") /// Added for audit trail

  salaryHistory Salary[]

  attendanceRecords Attendance[]
}

model Department {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  employees Employee[]

  manager   Employee? @relation("ManagedDepartment", fields: [managerId], references: [id])
  managerId String?   @unique
}


model Salary {
  id         String   @id @default(cuid())
  baseSalary Decimal  @db.Decimal(12, 2)
  effectiveDate DateTime

  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId String

  createdAt  DateTime @default(now())
}

model Leave {
  id        String    @id @default(cuid())
  leaveType LeaveType
  startDate DateTime
  endDate   DateTime
  reason    String
  status    LeaveStatus @default(PENDING)
  requestedAt DateTime @default(now())
  actionAt    DateTime?

  employee   Employee @relation("RequestedBy", fields: [employeeId], references: [id])
  employeeId String

  approvedBy   Employee? @relation("ApprovedBy", fields: [approvedById], references: [id])
  approvedById String?
}

model Attendance {
  id         String           @id @default(cuid())
  date       DateTime         @db.Date
  status     AttendanceStatus
  notes      String?

  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId String
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([employeeId, date])
}



enum UserRole {
  HR
  EMPLOYEE
}

enum MaritalStatus {
  SINGLE
  MARRIED
  DIVORCED
  WIDOWED
}

enum LeaveStatus {
  PENDING
  APPROVED
  REJECTED
}

enum LeaveType {
  ANNUAL
  SICK
  CASUAL
  UNPAID
  MATERNITY
  PATERNITY
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  HALF_DAY
  ON_LEAVE
}